# This workflow will install Python dependencies and run some static tests.
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Deploy

on: [push, pull_request]

defaults:
  run:
    shell: bash

env:
  python-version: "3.8"
  pyinstaller-version: "4.3"
  project-name: the-stars-came-down-screaming

jobs:
  build:
    runs-on: ubuntu-latest  # Use the latest Ubuntu environment

    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install PyInstaller==4.3
          pip install -r requirements.txt  # Install project dependencies

      - name: Build project
        run: pyinstaller --onefile build.spec  # Build the project using PyInstaller

      - name: Archive and Upload
        run: |
          if [ -d "dist" ]; then  # Check if dist directory exists
            cd dist  # Navigate to the distribution directory

            case ${{ matrix.os }} in
              'windows-latest')
                zip -r ../${{ github.run_number }}-windows-latest.zip .
                ;;
              'macos-latest')
                zip -r ../${{ github.run_number }}-macos-latest.zip .
                ;;
              'ubuntu-latest')
                tar -czvf ../${{ github.run_number }}-ubuntu-latest.tar.gz .
                ;;
            esac

            cd ..  # Go back to the root directory
            echo "Created artifact for ${{ matrix.os }}."
          else
            echo "No distribution files found for ${{ matrix.os }}."
          fi
        if: success()  # Only execute this step if the build was successful

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: tscds-${{ github.run_id }}-${{ matrix.os }}  # Name the artifact
          path: ${{ github.run_number }}-${{ matrix.os }}.*  # Upload the generated artifact file
